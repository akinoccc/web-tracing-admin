/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type { Infer } from '@kubb/oas'

export const oas = {
  openapi: '3.0.0',
  info: {
    description: 'Web Tracing SDK 错误监控后台 API',
    title: 'Web Tracing Admin API',
    termsOfService: 'http://swagger.io/terms/',
    contact: {
      name: 'API Support',
      url: 'http://www.swagger.io/support',
      email: 'support@swagger.io',
    },
    license: {
      name: 'MIT',
      url: 'https://github.com/akinoccc/web-tracing-admin/blob/main/LICENSE',
    },
    version: '1.0',
  },
  paths: {
    '/api/auth/login': {
      post: {
        description: '用户登录接口',
        tags: ['认证'],
        summary: '用户登录',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/service.LoginRequest',
              },
            },
          },
          description: '登录信息',
          required: true,
        },
        responses: {
          '200': {
            description: '登录成功',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/service.LoginResponse',
                },
              },
            },
          },
          '400': {
            description: '请求错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '500': {
            description: '内部错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
        },
      },
    },
    '/api/auth/register': {
      post: {
        description: '用户注册接口',
        tags: ['认证'],
        summary: '用户注册',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/service.RegisterRequest',
              },
            },
          },
          description: '注册信息',
          required: true,
        },
        responses: {
          '200': {
            description: '注册成功',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.SuccessResponse',
                },
              },
            },
          },
          '400': {
            description: '请求错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '500': {
            description: '内部错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
        },
      },
    },
    '/api/behavior/clicks': {
      get: {
        security: [
          {
            ApiKeyAuth: [],
          },
        ],
        description: '获取项目的用户点击数据',
        tags: ['用户行为'],
        summary: '获取用户点击数据',
        parameters: [
          {
            description: '项目ID',
            name: 'projectId',
            in: 'query',
            required: true,
            schema: {
              type: 'integer',
            },
          },
          {
            description: '页码',
            name: 'page',
            in: 'query',
            schema: {
              type: 'integer',
              default: 1,
            },
          },
          {
            description: '每页数量',
            name: 'pageSize',
            in: 'query',
            schema: {
              type: 'integer',
              default: 10,
            },
          },
          {
            description: '开始时间戳',
            name: 'startTime',
            in: 'query',
            schema: {
              type: 'integer',
            },
          },
          {
            description: '结束时间戳',
            name: 'endTime',
            in: 'query',
            schema: {
              type: 'integer',
            },
          },
        ],
        responses: {
          '200': {
            description: '用户点击数据列表',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/service.ClickListResponse',
                },
              },
            },
          },
          '400': {
            description: '请求错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '401': {
            description: '未授权',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '500': {
            description: '内部错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
        },
      },
    },
    '/api/behavior/pv': {
      get: {
        security: [
          {
            ApiKeyAuth: [],
          },
        ],
        description: '获取项目的页面访问数据',
        tags: ['用户行为'],
        summary: '获取页面访问数据',
        parameters: [
          {
            description: '项目ID',
            name: 'projectId',
            in: 'query',
            required: true,
            schema: {
              type: 'integer',
            },
          },
          {
            description: '页码',
            name: 'page',
            in: 'query',
            schema: {
              type: 'integer',
              default: 1,
            },
          },
          {
            description: '每页数量',
            name: 'pageSize',
            in: 'query',
            schema: {
              type: 'integer',
              default: 10,
            },
          },
          {
            description: '开始时间戳',
            name: 'startTime',
            in: 'query',
            schema: {
              type: 'integer',
            },
          },
          {
            description: '结束时间戳',
            name: 'endTime',
            in: 'query',
            schema: {
              type: 'integer',
            },
          },
        ],
        responses: {
          '200': {
            description: '页面访问数据列表',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/service.PVListResponse',
                },
              },
            },
          },
          '400': {
            description: '请求错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '401': {
            description: '未授权',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '500': {
            description: '内部错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
        },
      },
    },
    '/api/behavior/stats': {
      get: {
        security: [
          {
            ApiKeyAuth: [],
          },
        ],
        description: '获取项目的用户行为统计信息',
        tags: ['用户行为'],
        summary: '获取用户行为统计信息',
        parameters: [
          {
            description: '项目ID',
            name: 'projectId',
            in: 'query',
            required: true,
            schema: {
              type: 'integer',
            },
          },
          {
            description: '开始时间戳',
            name: 'startTime',
            in: 'query',
            schema: {
              type: 'integer',
            },
          },
          {
            description: '结束时间戳',
            name: 'endTime',
            in: 'query',
            schema: {
              type: 'integer',
            },
          },
        ],
        responses: {
          '200': {
            description: '用户行为统计信息',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/service.BehaviorStatsResponse',
                },
              },
            },
          },
          '400': {
            description: '请求错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '401': {
            description: '未授权',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '500': {
            description: '内部错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
        },
      },
    },
    '/api/errors': {
      get: {
        security: [
          {
            ApiKeyAuth: [],
          },
        ],
        description: '获取项目的错误列表',
        tags: ['错误监控'],
        summary: '获取错误列表',
        parameters: [
          {
            description: '项目ID',
            name: 'projectId',
            in: 'query',
            required: true,
            schema: {
              type: 'integer',
            },
          },
          {
            description: '页码',
            name: 'page',
            in: 'query',
            schema: {
              type: 'integer',
              default: 1,
            },
          },
          {
            description: '每页数量',
            name: 'pageSize',
            in: 'query',
            schema: {
              type: 'integer',
              default: 10,
            },
          },
          {
            description: '开始时间戳',
            name: 'startTime',
            in: 'query',
            schema: {
              type: 'integer',
            },
          },
          {
            description: '结束时间戳',
            name: 'endTime',
            in: 'query',
            schema: {
              type: 'integer',
            },
          },
          {
            description: '错误类型',
            name: 'errorType',
            in: 'query',
            schema: {
              type: 'string',
            },
          },
          {
            description: '严重程度',
            name: 'severity',
            in: 'query',
            schema: {
              type: 'string',
            },
          },
        ],
        responses: {
          '200': {
            description: '错误列表',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/service.ErrorListResponse',
                },
              },
            },
          },
          '400': {
            description: '请求错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '401': {
            description: '未授权',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '500': {
            description: '内部错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
        },
      },
    },
    '/api/errors/stats': {
      get: {
        security: [
          {
            ApiKeyAuth: [],
          },
        ],
        description: '获取项目的错误统计信息',
        tags: ['错误监控'],
        summary: '获取错误统计信息',
        parameters: [
          {
            description: '项目ID',
            name: 'projectId',
            in: 'query',
            required: true,
            schema: {
              type: 'integer',
            },
          },
          {
            description: '开始时间戳',
            name: 'startTime',
            in: 'query',
            schema: {
              type: 'integer',
            },
          },
          {
            description: '结束时间戳',
            name: 'endTime',
            in: 'query',
            schema: {
              type: 'integer',
            },
          },
        ],
        responses: {
          '200': {
            description: '错误统计信息',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/service.ErrorStatsResponse',
                },
              },
            },
          },
          '400': {
            description: '请求错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '401': {
            description: '未授权',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '500': {
            description: '内部错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
        },
      },
    },
    '/api/errors/{id}': {
      get: {
        security: [
          {
            ApiKeyAuth: [],
          },
        ],
        description: '获取错误详细信息',
        tags: ['错误监控'],
        summary: '获取错误详情',
        parameters: [
          {
            description: '错误ID',
            name: 'id',
            in: 'path',
            required: true,
            schema: {
              type: 'integer',
            },
          },
        ],
        responses: {
          '200': {
            description: '错误详情',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/service.ErrorDetailResponse',
                },
              },
            },
          },
          '400': {
            description: '请求错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '401': {
            description: '未授权',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '404': {
            description: '错误不存在',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '500': {
            description: '内部错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
        },
      },
    },
    '/api/performance': {
      get: {
        security: [
          {
            ApiKeyAuth: [],
          },
        ],
        description: '获取项目的性能数据',
        tags: ['性能监控'],
        summary: '获取性能数据',
        parameters: [
          {
            description: '项目ID',
            name: 'projectId',
            in: 'query',
            required: true,
            schema: {
              type: 'integer',
            },
          },
          {
            description: '页码',
            name: 'page',
            in: 'query',
            schema: {
              type: 'integer',
              default: 1,
            },
          },
          {
            description: '每页数量',
            name: 'pageSize',
            in: 'query',
            schema: {
              type: 'integer',
              default: 10,
            },
          },
          {
            description: '开始时间戳',
            name: 'startTime',
            in: 'query',
            schema: {
              type: 'integer',
            },
          },
          {
            description: '结束时间戳',
            name: 'endTime',
            in: 'query',
            schema: {
              type: 'integer',
            },
          },
          {
            description: '性能类型',
            name: 'type',
            in: 'query',
            schema: {
              type: 'string',
              enum: ['page', 'resource'],
            },
          },
        ],
        responses: {
          '200': {
            description: '性能数据列表',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/service.PerformanceListResponse',
                },
              },
            },
          },
          '400': {
            description: '请求错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '401': {
            description: '未授权',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '500': {
            description: '内部错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
        },
      },
    },
    '/api/performance/resources': {
      get: {
        security: [
          {
            ApiKeyAuth: [],
          },
        ],
        description: '获取项目的资源性能数据',
        tags: ['性能监控'],
        summary: '获取资源性能数据',
        parameters: [
          {
            description: '项目ID',
            name: 'projectId',
            in: 'query',
            required: true,
            schema: {
              type: 'integer',
            },
          },
          {
            description: '页码',
            name: 'page',
            in: 'query',
            schema: {
              type: 'integer',
              default: 1,
            },
          },
          {
            description: '每页数量',
            name: 'pageSize',
            in: 'query',
            schema: {
              type: 'integer',
              default: 10,
            },
          },
          {
            description: '开始时间戳',
            name: 'startTime',
            in: 'query',
            schema: {
              type: 'integer',
            },
          },
          {
            description: '结束时间戳',
            name: 'endTime',
            in: 'query',
            schema: {
              type: 'integer',
            },
          },
          {
            description: '资源类型',
            name: 'resourceType',
            in: 'query',
            schema: {
              type: 'string',
            },
          },
        ],
        responses: {
          '200': {
            description: '资源性能数据列表',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/service.ResourcePerformanceListResponse',
                },
              },
            },
          },
          '400': {
            description: '请求错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '401': {
            description: '未授权',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '500': {
            description: '内部错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
        },
      },
    },
    '/api/performance/stats': {
      get: {
        security: [
          {
            ApiKeyAuth: [],
          },
        ],
        description: '获取项目的性能统计信息',
        tags: ['性能监控'],
        summary: '获取性能统计信息',
        parameters: [
          {
            description: '项目ID',
            name: 'projectId',
            in: 'query',
            required: true,
            schema: {
              type: 'integer',
            },
          },
          {
            description: '开始时间戳',
            name: 'startTime',
            in: 'query',
            schema: {
              type: 'integer',
            },
          },
          {
            description: '结束时间戳',
            name: 'endTime',
            in: 'query',
            schema: {
              type: 'integer',
            },
          },
        ],
        responses: {
          '200': {
            description: '性能统计信息',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/service.PerformanceStatsResponse',
                },
              },
            },
          },
          '400': {
            description: '请求错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '401': {
            description: '未授权',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '500': {
            description: '内部错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
        },
      },
    },
    '/api/projects': {
      get: {
        security: [
          {
            ApiKeyAuth: [],
          },
        ],
        description: '获取当前用户的所有项目',
        tags: ['项目'],
        summary: '获取项目列表',
        responses: {
          '200': {
            description: '项目列表',
            content: {
              'application/json': {
                schema: {
                  type: 'array',
                  items: {
                    $ref: '#/components/schemas/model.Project',
                  },
                },
              },
            },
          },
          '401': {
            description: '未授权',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '500': {
            description: '内部错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
        },
      },
      post: {
        security: [
          {
            ApiKeyAuth: [],
          },
        ],
        description: '创建新项目',
        tags: ['项目'],
        summary: '创建项目',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/service.CreateProjectRequest',
              },
            },
          },
          description: '项目信息',
          required: true,
        },
        responses: {
          '200': {
            description: '创建成功',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/model.Project',
                },
              },
            },
          },
          '400': {
            description: '请求错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '401': {
            description: '未授权',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '500': {
            description: '内部错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
        },
      },
    },
    '/api/projects/{id}': {
      get: {
        security: [
          {
            ApiKeyAuth: [],
          },
        ],
        description: '获取项目详细信息',
        tags: ['项目'],
        summary: '获取项目详情',
        parameters: [
          {
            description: '项目ID',
            name: 'id',
            in: 'path',
            required: true,
            schema: {
              type: 'integer',
            },
          },
        ],
        responses: {
          '200': {
            description: '项目详情',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/model.Project',
                },
              },
            },
          },
          '400': {
            description: '请求错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '401': {
            description: '未授权',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '404': {
            description: '项目不存在',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '500': {
            description: '内部错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
        },
      },
      put: {
        security: [
          {
            ApiKeyAuth: [],
          },
        ],
        description: '更新项目信息',
        tags: ['项目'],
        summary: '更新项目',
        parameters: [
          {
            description: '项目ID',
            name: 'id',
            in: 'path',
            required: true,
            schema: {
              type: 'integer',
            },
          },
        ],
        requestBody: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/service.UpdateProjectRequest',
              },
            },
          },
          description: '项目信息',
          required: true,
        },
        responses: {
          '200': {
            description: '更新成功',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/model.Project',
                },
              },
            },
          },
          '400': {
            description: '请求错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '401': {
            description: '未授权',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '404': {
            description: '项目不存在',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '500': {
            description: '内部错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
        },
      },
      delete: {
        security: [
          {
            ApiKeyAuth: [],
          },
        ],
        description: '删除项目',
        tags: ['项目'],
        summary: '删除项目',
        parameters: [
          {
            description: '项目ID',
            name: 'id',
            in: 'path',
            required: true,
            schema: {
              type: 'integer',
            },
          },
        ],
        responses: {
          '200': {
            description: '删除成功',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.SuccessResponse',
                },
              },
            },
          },
          '400': {
            description: '请求错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '401': {
            description: '未授权',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '404': {
            description: '项目不存在',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '500': {
            description: '内部错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
        },
      },
    },
    '/trackweb': {
      post: {
        description: '接收SDK上报的错误和性能数据',
        tags: ['数据上报'],
        summary: '接收SDK上报数据',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/service.TrackRequest',
              },
            },
          },
          description: '上报数据',
          required: true,
        },
        responses: {
          '200': {
            description: '上报成功',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.SuccessResponse',
                },
              },
            },
          },
          '400': {
            description: '请求错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '500': {
            description: '内部错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
        },
      },
    },
  },
  servers: [
    {
      url: 'http://localhost:8080',
    },
    {
      url: 'https://localhost:8080',
    },
  ],
  components: {
    securitySchemes: {
      ApiKeyAuth: {
        type: 'apiKey',
        name: 'Authorization',
        in: 'header',
      },
    },
    schemas: {
      'api.ErrorResponse': {
        type: 'object',
        properties: {
          message: {
            type: 'string',
          },
        },
      },
      'api.SuccessResponse': {
        type: 'object',
        properties: {
          message: {
            type: 'string',
          },
        },
      },
      'model.Project': {
        type: 'object',
        properties: {
          appKey: {
            type: 'string',
          },
          createdAt: {
            type: 'string',
          },
          description: {
            type: 'string',
          },
          id: {
            type: 'integer',
          },
          name: {
            type: 'string',
          },
          updatedAt: {
            type: 'string',
          },
          user: {
            $ref: '#/components/schemas/model.User',
          },
          userId: {
            type: 'integer',
          },
        },
      },
      'model.User': {
        type: 'object',
        properties: {
          createdAt: {
            type: 'string',
          },
          email: {
            type: 'string',
          },
          id: {
            type: 'integer',
          },
          updatedAt: {
            type: 'string',
          },
          username: {
            type: 'string',
          },
        },
      },
      'service.BehaviorStatsResponse': {
        type: 'object',
        properties: {
          clickStats: {
            $ref: '#/components/schemas/service.ClickStatsData',
          },
          pvStats: {
            $ref: '#/components/schemas/service.PVStatsData',
          },
          pvTrend: {
            type: 'array',
            items: {
              $ref: '#/components/schemas/service.PVTrendItem',
            },
          },
        },
      },
      'service.ClickItem': {
        type: 'object',
        properties: {
          elementPath: {
            type: 'string',
          },
          elementType: {
            type: 'string',
          },
          eventId: {
            type: 'string',
          },
          id: {
            type: 'integer',
          },
          innerText: {
            type: 'string',
          },
          pageUrl: {
            type: 'string',
          },
          triggerTime: {
            type: 'integer',
          },
        },
      },
      'service.ClickListResponse': {
        type: 'object',
        properties: {
          list: {
            type: 'array',
            items: {
              $ref: '#/components/schemas/service.ClickItem',
            },
          },
          total: {
            type: 'integer',
          },
        },
      },
      'service.ClickStatsData': {
        type: 'object',
        properties: {
          clicksToday: {
            type: 'integer',
          },
          topElements: {
            type: 'object',
            additionalProperties: {
              type: 'integer',
            },
          },
          totalClicks: {
            type: 'integer',
          },
        },
      },
      'service.CreateProjectRequest': {
        type: 'object',
        required: ['name'],
        properties: {
          description: {
            type: 'string',
          },
          name: {
            type: 'string',
          },
        },
      },
      'service.ErrorDetailResponse': {
        type: 'object',
        properties: {
          events: {
            type: 'array',
            items: {
              $ref: '#/components/schemas/service.ErrorEventItem',
            },
          },
          group: {
            $ref: '#/components/schemas/service.ErrorGroupItem',
          },
          total: {
            type: 'integer',
          },
        },
      },
      'service.ErrorEventItem': {
        type: 'object',
        properties: {
          browser: {
            type: 'string',
          },
          columnNumber: {
            type: 'integer',
          },
          device: {
            type: 'string',
          },
          errorMessage: {
            type: 'string',
          },
          errorStack: {
            type: 'string',
          },
          errorType: {
            type: 'string',
          },
          eventId: {
            type: 'string',
          },
          filePath: {
            type: 'string',
          },
          id: {
            type: 'integer',
          },
          lineNumber: {
            type: 'integer',
          },
          os: {
            type: 'string',
          },
          pageUrl: {
            type: 'string',
          },
          triggerTime: {
            type: 'integer',
          },
        },
      },
      'service.ErrorGroupItem': {
        type: 'object',
        properties: {
          count: {
            type: 'integer',
          },
          errorMessage: {
            type: 'string',
          },
          errorType: {
            type: 'string',
          },
          fingerprint: {
            type: 'string',
          },
          firstSeen: {
            type: 'integer',
          },
          id: {
            type: 'integer',
          },
          lastSeen: {
            type: 'integer',
          },
          severity: {
            type: 'string',
          },
          status: {
            type: 'string',
          },
          subType: {
            type: 'string',
          },
        },
      },
      'service.ErrorListResponse': {
        type: 'object',
        properties: {
          list: {
            type: 'array',
            items: {
              $ref: '#/components/schemas/service.ErrorGroupItem',
            },
          },
          stats: {
            $ref: '#/components/schemas/service.ErrorStatsData',
          },
          total: {
            type: 'integer',
          },
        },
      },
      'service.ErrorStatsData': {
        type: 'object',
        properties: {
          affectedUsers: {
            type: 'integer',
          },
          browserDistribution: {
            type: 'object',
            additionalProperties: {
              type: 'integer',
            },
          },
          errorsToday: {
            type: 'integer',
          },
          errorsYesterday: {
            type: 'integer',
          },
          osDistribution: {
            type: 'object',
            additionalProperties: {
              type: 'integer',
            },
          },
          totalErrors: {
            type: 'integer',
          },
          typeDistribution: {
            type: 'object',
            additionalProperties: {
              type: 'integer',
            },
          },
        },
      },
      'service.ErrorStatsResponse': {
        type: 'object',
        properties: {
          stats: {
            $ref: '#/components/schemas/service.ErrorStatsData',
          },
          trend: {
            type: 'array',
            items: {
              $ref: '#/components/schemas/service.ErrorTrendItem',
            },
          },
        },
      },
      'service.ErrorTrendItem': {
        type: 'object',
        properties: {
          count: {
            type: 'integer',
          },
          date: {
            type: 'string',
          },
        },
      },
      'service.LoginRequest': {
        type: 'object',
        required: ['password', 'username'],
        properties: {
          password: {
            type: 'string',
          },
          username: {
            type: 'string',
          },
        },
      },
      'service.LoginResponse': {
        type: 'object',
        properties: {
          expireAt: {
            type: 'integer',
          },
          token: {
            type: 'string',
          },
          user: {
            $ref: '#/components/schemas/model.User',
          },
        },
      },
      'service.PVItem': {
        type: 'object',
        properties: {
          browser: {
            type: 'string',
          },
          device: {
            type: 'string',
          },
          eventId: {
            type: 'string',
          },
          id: {
            type: 'integer',
          },
          isNewVisit: {
            type: 'boolean',
          },
          os: {
            type: 'string',
          },
          pageUrl: {
            type: 'string',
          },
          referrer: {
            type: 'string',
          },
          stayTime: {
            type: 'integer',
          },
          title: {
            type: 'string',
          },
          triggerTime: {
            type: 'integer',
          },
        },
      },
      'service.PVListResponse': {
        type: 'object',
        properties: {
          list: {
            type: 'array',
            items: {
              $ref: '#/components/schemas/service.PVItem',
            },
          },
          total: {
            type: 'integer',
          },
        },
      },
      'service.PVStatsData': {
        type: 'object',
        properties: {
          avgStayTime: {
            type: 'integer',
          },
          bounceRate: {
            type: 'number',
          },
          pvToday: {
            type: 'integer',
          },
          topPages: {
            type: 'object',
            additionalProperties: {
              type: 'integer',
            },
          },
          totalPV: {
            type: 'integer',
          },
          totalUV: {
            type: 'integer',
          },
          uvToday: {
            type: 'integer',
          },
        },
      },
      'service.PVTrendItem': {
        type: 'object',
        properties: {
          date: {
            type: 'string',
          },
          pv: {
            type: 'integer',
          },
          uv: {
            type: 'integer',
          },
        },
      },
      'service.PerformanceListResponse': {
        type: 'object',
        properties: {
          list: {
            type: 'array',
            items: {
              $ref: '#/components/schemas/service.PerformancePageItem',
            },
          },
          stats: {
            $ref: '#/components/schemas/service.PerformanceStatsData',
          },
          total: {
            type: 'integer',
          },
        },
      },
      'service.PerformancePageItem': {
        type: 'object',
        properties: {
          browser: {
            type: 'string',
          },
          cls: {
            type: 'number',
          },
          device: {
            type: 'string',
          },
          domReady: {
            type: 'integer',
          },
          eventId: {
            type: 'string',
          },
          fcp: {
            type: 'integer',
          },
          fid: {
            type: 'integer',
          },
          fp: {
            type: 'integer',
          },
          id: {
            type: 'integer',
          },
          lcp: {
            type: 'integer',
          },
          load: {
            type: 'integer',
          },
          os: {
            type: 'string',
          },
          pageUrl: {
            type: 'string',
          },
          triggerTime: {
            type: 'integer',
          },
          ttfb: {
            type: 'integer',
          },
        },
      },
      'service.PerformanceStatsData': {
        type: 'object',
        properties: {
          avgCLS: {
            type: 'number',
          },
          avgDomReady: {
            type: 'integer',
          },
          avgFCP: {
            type: 'integer',
          },
          avgFID: {
            type: 'integer',
          },
          avgFP: {
            type: 'integer',
          },
          avgLCP: {
            type: 'integer',
          },
          avgLoad: {
            type: 'integer',
          },
          avgTTFB: {
            type: 'integer',
          },
        },
      },
      'service.PerformanceStatsResponse': {
        type: 'object',
        properties: {
          stats: {
            $ref: '#/components/schemas/service.PerformanceStatsData',
          },
          trend: {
            type: 'array',
            items: {
              $ref: '#/components/schemas/service.PerformanceTrendItem',
            },
          },
        },
      },
      'service.PerformanceTrendItem': {
        type: 'object',
        properties: {
          date: {
            type: 'string',
          },
          fcp: {
            type: 'integer',
          },
          fp: {
            type: 'integer',
          },
          lcp: {
            type: 'integer',
          },
          ttfb: {
            type: 'integer',
          },
        },
      },
      'service.RegisterRequest': {
        type: 'object',
        required: ['email', 'password', 'username'],
        properties: {
          email: {
            type: 'string',
          },
          password: {
            type: 'string',
          },
          username: {
            type: 'string',
          },
        },
      },
      'service.ResourcePerformanceItem': {
        type: 'object',
        properties: {
          duration: {
            type: 'integer',
          },
          eventId: {
            type: 'string',
          },
          id: {
            type: 'integer',
          },
          initiatorType: {
            type: 'string',
          },
          pageUrl: {
            type: 'string',
          },
          resourceType: {
            type: 'string',
          },
          resourceUrl: {
            type: 'string',
          },
          startTime: {
            type: 'integer',
          },
          transferSize: {
            type: 'integer',
          },
        },
      },
      'service.ResourcePerformanceListResponse': {
        type: 'object',
        properties: {
          list: {
            type: 'array',
            items: {
              $ref: '#/components/schemas/service.ResourcePerformanceItem',
            },
          },
          total: {
            type: 'integer',
          },
        },
      },
      'service.TrackRequest': {
        type: 'object',
      },
      'service.UpdateProjectRequest': {
        type: 'object',
        required: ['name'],
        properties: {
          description: {
            type: 'string',
          },
          name: {
            type: 'string',
          },
        },
      },
    },
  },
} as const

export type Oas = Infer<typeof oas>