/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type { Infer } from '@kubb/oas'

export const oas = {
  openapi: '3.0.0',
  info: {
    description: 'Web Tracing SDK 错误监控后台 API',
    title: 'Web Tracing Admin API',
    termsOfService: 'http://swagger.io/terms/',
    contact: {
      name: 'API Support',
      url: 'http://www.swagger.io/support',
      email: 'support@swagger.io',
    },
    license: {
      name: 'MIT',
      url: 'https://github.com/akinoccc/web-tracing-admin/blob/main/LICENSE',
    },
    version: '1.0',
  },
  paths: {
    '/api/auth/login': {
      post: {
        description: '用户登录接口',
        tags: ['认证'],
        summary: '用户登录',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/service.LoginRequest',
              },
            },
          },
          description: '登录信息',
          required: true,
        },
        responses: {
          '200': {
            description: '登录成功',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/service.LoginResponse',
                },
              },
            },
          },
          '400': {
            description: '请求错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '500': {
            description: '内部错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
        },
      },
    },
    '/api/auth/register': {
      post: {
        description: '用户注册接口',
        tags: ['认证'],
        summary: '用户注册',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/service.RegisterRequest',
              },
            },
          },
          description: '注册信息',
          required: true,
        },
        responses: {
          '200': {
            description: '注册成功',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.SuccessResponse',
                },
              },
            },
          },
          '400': {
            description: '请求错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '500': {
            description: '内部错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
        },
      },
    },
    '/api/events': {
      get: {
        security: [
          {
            ApiKeyAuth: [],
          },
        ],
        description: '获取项目的事件列表',
        tags: ['事件'],
        summary: '获取事件列表',
        parameters: [
          {
            description: '项目ID',
            name: 'projectId',
            in: 'query',
            required: true,
            schema: {
              type: 'integer',
            },
          },
          {
            description: '事件类型',
            name: 'eventType',
            in: 'query',
            schema: {
              type: 'string',
            },
          },
          {
            description: '页码',
            name: 'page',
            in: 'query',
            schema: {
              type: 'integer',
            },
          },
          {
            description: '每页数量',
            name: 'pageSize',
            in: 'query',
            schema: {
              type: 'integer',
            },
          },
        ],
        responses: {
          '200': {
            description: '事件列表',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/service.EventListResponse',
                },
              },
            },
          },
          '400': {
            description: '请求错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '401': {
            description: '未授权',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '500': {
            description: '内部错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
        },
      },
    },
    '/api/events/stats': {
      get: {
        security: [
          {
            ApiKeyAuth: [],
          },
        ],
        description: '获取项目的错误事件统计',
        tags: ['事件'],
        summary: '获取错误事件统计',
        parameters: [
          {
            description: '项目ID',
            name: 'projectId',
            in: 'query',
            required: true,
            schema: {
              type: 'integer',
            },
          },
          {
            description: '开始时间',
            name: 'startTime',
            in: 'query',
            required: true,
            schema: {
              type: 'string',
            },
          },
          {
            description: '结束时间',
            name: 'endTime',
            in: 'query',
            required: true,
            schema: {
              type: 'string',
            },
          },
        ],
        responses: {
          '200': {
            description: '统计数据',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/service.EventStatsResponse',
                },
              },
            },
          },
          '400': {
            description: '请求错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '401': {
            description: '未授权',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '500': {
            description: '内部错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
        },
      },
    },
    '/api/events/stats/browser': {
      get: {
        security: [
          {
            ApiKeyAuth: [],
          },
        ],
        description: '获取项目的错误事件按浏览器分布统计',
        tags: ['事件'],
        summary: '获取错误事件按浏览器分布统计',
        parameters: [
          {
            description: '项目ID',
            name: 'projectId',
            in: 'query',
            required: true,
            schema: {
              type: 'integer',
            },
          },
          {
            description: '开始时间',
            name: 'startTime',
            in: 'query',
            required: true,
            schema: {
              type: 'string',
            },
          },
          {
            description: '结束时间',
            name: 'endTime',
            in: 'query',
            required: true,
            schema: {
              type: 'string',
            },
          },
        ],
        responses: {
          '200': {
            description: '统计数据',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/service.DistributionStatsResponse',
                },
              },
            },
          },
          '400': {
            description: '请求错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '401': {
            description: '未授权',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '500': {
            description: '内部错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
        },
      },
    },
    '/api/events/stats/device': {
      get: {
        security: [
          {
            ApiKeyAuth: [],
          },
        ],
        description: '获取项目的错误事件按设备类型分布统计',
        tags: ['事件'],
        summary: '获取错误事件按设备类型分布统计',
        parameters: [
          {
            description: '项目ID',
            name: 'projectId',
            in: 'query',
            required: true,
            schema: {
              type: 'integer',
            },
          },
          {
            description: '开始时间',
            name: 'startTime',
            in: 'query',
            required: true,
            schema: {
              type: 'string',
            },
          },
          {
            description: '结束时间',
            name: 'endTime',
            in: 'query',
            required: true,
            schema: {
              type: 'string',
            },
          },
        ],
        responses: {
          '200': {
            description: '统计数据',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/service.DistributionStatsResponse',
                },
              },
            },
          },
          '400': {
            description: '请求错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '401': {
            description: '未授权',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '500': {
            description: '内部错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
        },
      },
    },
    '/api/events/stats/error-type': {
      get: {
        security: [
          {
            ApiKeyAuth: [],
          },
        ],
        description: '获取项目的错误事件按错误类型分布统计',
        tags: ['事件'],
        summary: '获取错误事件按错误类型分布统计',
        parameters: [
          {
            description: '项目ID',
            name: 'projectId',
            in: 'query',
            required: true,
            schema: {
              type: 'integer',
            },
          },
          {
            description: '开始时间',
            name: 'startTime',
            in: 'query',
            required: true,
            schema: {
              type: 'string',
            },
          },
          {
            description: '结束时间',
            name: 'endTime',
            in: 'query',
            required: true,
            schema: {
              type: 'string',
            },
          },
        ],
        responses: {
          '200': {
            description: '统计数据',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/service.DistributionStatsResponse',
                },
              },
            },
          },
          '400': {
            description: '请求错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '401': {
            description: '未授权',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '500': {
            description: '内部错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
        },
      },
    },
    '/api/events/stats/os': {
      get: {
        security: [
          {
            ApiKeyAuth: [],
          },
        ],
        description: '获取项目的错误事件按操作系统分布统计',
        tags: ['事件'],
        summary: '获取错误事件按操作系统分布统计',
        parameters: [
          {
            description: '项目ID',
            name: 'projectId',
            in: 'query',
            required: true,
            schema: {
              type: 'integer',
            },
          },
          {
            description: '开始时间',
            name: 'startTime',
            in: 'query',
            required: true,
            schema: {
              type: 'string',
            },
          },
          {
            description: '结束时间',
            name: 'endTime',
            in: 'query',
            required: true,
            schema: {
              type: 'string',
            },
          },
        ],
        responses: {
          '200': {
            description: '统计数据',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/service.DistributionStatsResponse',
                },
              },
            },
          },
          '400': {
            description: '请求错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '401': {
            description: '未授权',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '500': {
            description: '内部错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
        },
      },
    },
    '/api/events/stats/performance': {
      get: {
        security: [
          {
            ApiKeyAuth: [],
          },
        ],
        description: '获取项目的性能指标统计',
        tags: ['事件'],
        summary: '获取性能指标统计',
        parameters: [
          {
            description: '项目ID',
            name: 'projectId',
            in: 'query',
            required: true,
            schema: {
              type: 'integer',
            },
          },
          {
            description: '开始时间',
            name: 'startTime',
            in: 'query',
            required: true,
            schema: {
              type: 'string',
            },
          },
          {
            description: '结束时间',
            name: 'endTime',
            in: 'query',
            required: true,
            schema: {
              type: 'string',
            },
          },
        ],
        responses: {
          '200': {
            description: '统计数据',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/service.PerformanceStatsResponse',
                },
              },
            },
          },
          '400': {
            description: '请求错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '401': {
            description: '未授权',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '500': {
            description: '内部错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
        },
      },
    },
    '/api/events/stats/request-error': {
      get: {
        security: [
          {
            ApiKeyAuth: [],
          },
        ],
        description: '获取项目的请求错误统计',
        tags: ['事件'],
        summary: '获取请求错误统计',
        parameters: [
          {
            description: '项目ID',
            name: 'projectId',
            in: 'query',
            required: true,
            schema: {
              type: 'integer',
            },
          },
          {
            description: '开始时间',
            name: 'startTime',
            in: 'query',
            required: true,
            schema: {
              type: 'string',
            },
          },
          {
            description: '结束时间',
            name: 'endTime',
            in: 'query',
            required: true,
            schema: {
              type: 'string',
            },
          },
        ],
        responses: {
          '200': {
            description: '统计数据',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/service.RequestErrorStatsResponse',
                },
              },
            },
          },
          '400': {
            description: '请求错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '401': {
            description: '未授权',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '500': {
            description: '内部错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
        },
      },
    },
    '/api/events/{id}': {
      get: {
        security: [
          {
            ApiKeyAuth: [],
          },
        ],
        description: '获取事件详细信息',
        tags: ['事件'],
        summary: '获取事件详情',
        parameters: [
          {
            description: '事件ID',
            name: 'id',
            in: 'path',
            required: true,
            schema: {
              type: 'integer',
            },
          },
        ],
        responses: {
          '200': {
            description: '事件详情',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/service.EventDetailResponse',
                },
              },
            },
          },
          '400': {
            description: '请求错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '401': {
            description: '未授权',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '404': {
            description: '事件不存在',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '500': {
            description: '内部错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
        },
      },
    },
    '/api/projects': {
      get: {
        security: [
          {
            ApiKeyAuth: [],
          },
        ],
        description: '获取当前用户的所有项目',
        tags: ['项目'],
        summary: '获取项目列表',
        responses: {
          '200': {
            description: '项目列表',
            content: {
              'application/json': {
                schema: {
                  type: 'array',
                  items: {
                    $ref: '#/components/schemas/model.Project',
                  },
                },
              },
            },
          },
          '401': {
            description: '未授权',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '500': {
            description: '内部错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
        },
      },
      post: {
        security: [
          {
            ApiKeyAuth: [],
          },
        ],
        description: '创建新项目',
        tags: ['项目'],
        summary: '创建项目',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/service.CreateProjectRequest',
              },
            },
          },
          description: '项目信息',
          required: true,
        },
        responses: {
          '200': {
            description: '创建成功',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/model.Project',
                },
              },
            },
          },
          '400': {
            description: '请求错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '401': {
            description: '未授权',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '500': {
            description: '内部错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
        },
      },
    },
    '/api/projects/{id}': {
      get: {
        security: [
          {
            ApiKeyAuth: [],
          },
        ],
        description: '获取项目详细信息',
        tags: ['项目'],
        summary: '获取项目详情',
        parameters: [
          {
            description: '项目ID',
            name: 'id',
            in: 'path',
            required: true,
            schema: {
              type: 'integer',
            },
          },
        ],
        responses: {
          '200': {
            description: '项目详情',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/model.Project',
                },
              },
            },
          },
          '400': {
            description: '请求错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '401': {
            description: '未授权',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '404': {
            description: '项目不存在',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '500': {
            description: '内部错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
        },
      },
      put: {
        security: [
          {
            ApiKeyAuth: [],
          },
        ],
        description: '更新项目信息',
        tags: ['项目'],
        summary: '更新项目',
        parameters: [
          {
            description: '项目ID',
            name: 'id',
            in: 'path',
            required: true,
            schema: {
              type: 'integer',
            },
          },
        ],
        requestBody: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/service.UpdateProjectRequest',
              },
            },
          },
          description: '项目信息',
          required: true,
        },
        responses: {
          '200': {
            description: '更新成功',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/model.Project',
                },
              },
            },
          },
          '400': {
            description: '请求错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '401': {
            description: '未授权',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '404': {
            description: '项目不存在',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '500': {
            description: '内部错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
        },
      },
      delete: {
        security: [
          {
            ApiKeyAuth: [],
          },
        ],
        description: '删除项目',
        tags: ['项目'],
        summary: '删除项目',
        parameters: [
          {
            description: '项目ID',
            name: 'id',
            in: 'path',
            required: true,
            schema: {
              type: 'integer',
            },
          },
        ],
        responses: {
          '200': {
            description: '删除成功',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.SuccessResponse',
                },
              },
            },
          },
          '400': {
            description: '请求错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '401': {
            description: '未授权',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '404': {
            description: '项目不存在',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '500': {
            description: '内部错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
        },
      },
    },
    '/cleanTracingList': {
      post: {
        description: '清除所有跟踪数据',
        tags: ['跟踪'],
        summary: '清除所有跟踪数据',
        responses: {
          '200': {
            description: '清除成功',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.SuccessResponse',
                },
              },
            },
          },
          '500': {
            description: '内部错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
        },
      },
    },
    '/getAllTracingList': {
      get: {
        description: '获取所有跟踪数据',
        tags: ['跟踪'],
        summary: '获取所有跟踪数据',
        parameters: [
          {
            description: '事件类型',
            name: 'eventType',
            in: 'query',
            schema: {
              type: 'string',
            },
          },
          {
            description: '开始时间，格式：2006-01-02',
            name: 'startTime',
            in: 'query',
            schema: {
              type: 'string',
            },
          },
          {
            description: '结束时间，格式：2006-01-02',
            name: 'endTime',
            in: 'query',
            schema: {
              type: 'string',
            },
          },
          {
            description: '关键字搜索',
            name: 'keyword',
            in: 'query',
            schema: {
              type: 'string',
            },
          },
          {
            description: '浏览器类型',
            name: 'browser',
            in: 'query',
            schema: {
              type: 'string',
            },
          },
          {
            description: '操作系统',
            name: 'os',
            in: 'query',
            schema: {
              type: 'string',
            },
          },
          {
            description: '设备类型',
            name: 'deviceType',
            in: 'query',
            schema: {
              type: 'string',
            },
          },
          {
            description: '错误类型，仅当 eventType=error 时有效',
            name: 'errorType',
            in: 'query',
            schema: {
              type: 'string',
            },
          },
          {
            description: '响应状态码，仅当 eventType=request 时有效',
            name: 'responseStatus',
            in: 'query',
            schema: {
              type: 'string',
            },
          },
        ],
        responses: {
          '200': {
            description: '获取成功',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.SuccessResponse',
                },
              },
            },
          },
          '500': {
            description: '内部错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
        },
      },
    },
    '/getBaseInfo': {
      get: {
        description: '获取基础信息',
        tags: ['跟踪'],
        summary: '获取基础信息',
        responses: {
          '200': {
            description: '获取成功',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.SuccessResponse',
                },
              },
            },
          },
          '500': {
            description: '内部错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
        },
      },
    },
    '/trackweb': {
      post: {
        description: 'SDK 上报跟踪数据接口',
        tags: ['跟踪'],
        summary: '上报跟踪数据',
        parameters: [
          {
            description: '应用密钥',
            name: 'app_key',
            in: 'query',
            required: true,
            schema: {
              type: 'string',
            },
          },
        ],
        requestBody: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/service.TrackWebRequest',
              },
            },
          },
          description: '跟踪数据',
          required: true,
        },
        responses: {
          '200': {
            description: '上报成功',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.SuccessResponse',
                },
              },
            },
          },
          '400': {
            description: '请求错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
          '500': {
            description: '内部错误',
            content: {
              'application/json': {
                schema: {
                  $ref: '#/components/schemas/api.ErrorResponse',
                },
              },
            },
          },
        },
      },
    },
  },
  servers: [
    {
      url: 'http://localhost:8080',
    },
    {
      url: 'https://localhost:8080',
    },
  ],
  components: {
    securitySchemes: {
      ApiKeyAuth: {
        type: 'apiKey',
        name: 'Authorization',
        in: 'header',
      },
    },
    schemas: {
      'api.ErrorResponse': {
        type: 'object',
        properties: {
          message: {
            type: 'string',
          },
        },
      },
      'api.SuccessResponse': {
        type: 'object',
        properties: {
          message: {
            type: 'string',
          },
        },
      },
      'model.BaseInfo': {
        type: 'object',
        properties: {
          browser: {
            type: 'string',
          },
          browserVersion: {
            type: 'string',
          },
          createdAt: {
            type: 'string',
          },
          deviceType: {
            type: 'string',
          },
          id: {
            type: 'integer',
          },
          ip: {
            type: 'string',
          },
          os: {
            type: 'string',
          },
          osVersion: {
            type: 'string',
          },
          projectId: {
            type: 'integer',
          },
          screenHeight: {
            type: 'integer',
          },
          screenWidth: {
            type: 'integer',
          },
          updatedAt: {
            type: 'string',
          },
          userAgent: {
            type: 'string',
          },
          userId: {
            type: 'string',
          },
        },
      },
      'model.ClickEvent': {
        type: 'object',
        properties: {
          createdAt: {
            type: 'string',
          },
          elementPath: {
            type: 'string',
          },
          elementType: {
            type: 'string',
          },
          event: {
            $ref: '#/components/schemas/model.Event',
          },
          eventId: {
            type: 'integer',
          },
          id: {
            type: 'integer',
          },
          innerText: {
            type: 'string',
          },
          updatedAt: {
            type: 'string',
          },
        },
      },
      'model.ErrorEvent': {
        type: 'object',
        properties: {
          columnNumber: {
            type: 'integer',
          },
          componentName: {
            type: 'string',
          },
          createdAt: {
            type: 'string',
          },
          errorMessage: {
            type: 'string',
          },
          errorStack: {
            type: 'string',
          },
          errorType: {
            type: 'string',
          },
          event: {
            $ref: '#/components/schemas/model.Event',
          },
          eventId: {
            type: 'integer',
          },
          filePath: {
            type: 'string',
          },
          id: {
            type: 'integer',
          },
          lineNumber: {
            type: 'integer',
          },
          recordScreen: {
            type: 'string',
          },
          updatedAt: {
            type: 'string',
          },
        },
      },
      'model.Event': {
        type: 'object',
        properties: {
          baseInfo: {
            $ref: '#/components/schemas/model.BaseInfo',
          },
          baseInfoId: {
            type: 'integer',
          },
          createdAt: {
            type: 'string',
          },
          eventId: {
            type: 'string',
          },
          eventType: {
            type: 'string',
          },
          id: {
            type: 'integer',
          },
          projectId: {
            type: 'integer',
          },
          referer: {
            type: 'string',
          },
          sendTime: {
            type: 'integer',
          },
          title: {
            type: 'string',
          },
          triggerPageUrl: {
            type: 'string',
          },
          triggerTime: {
            type: 'integer',
          },
          updatedAt: {
            type: 'string',
          },
        },
      },
      'model.ExposureEvent': {
        type: 'object',
        properties: {
          createdAt: {
            type: 'string',
          },
          elementPath: {
            type: 'string',
          },
          elementType: {
            type: 'string',
          },
          event: {
            $ref: '#/components/schemas/model.Event',
          },
          eventId: {
            type: 'integer',
          },
          id: {
            type: 'integer',
          },
          innerText: {
            type: 'string',
          },
          updatedAt: {
            type: 'string',
          },
        },
      },
      'model.PerformanceEvent': {
        type: 'object',
        properties: {
          createdAt: {
            type: 'string',
          },
          decodedBodySize: {
            type: 'integer',
          },
          duration: {
            type: 'number',
          },
          event: {
            $ref: '#/components/schemas/model.Event',
          },
          eventId: {
            type: 'integer',
          },
          id: {
            type: 'integer',
          },
          requestUrl: {
            type: 'string',
          },
          resourceType: {
            type: 'string',
          },
          responseEnd: {
            type: 'number',
          },
          responseStatus: {
            type: 'string',
          },
          transferSize: {
            type: 'integer',
          },
          updatedAt: {
            type: 'string',
          },
        },
      },
      'model.Project': {
        type: 'object',
        properties: {
          appKey: {
            type: 'string',
          },
          createdAt: {
            type: 'string',
          },
          description: {
            type: 'string',
          },
          id: {
            type: 'integer',
          },
          name: {
            type: 'string',
          },
          updatedAt: {
            type: 'string',
          },
          user: {
            $ref: '#/components/schemas/model.User',
          },
          userId: {
            type: 'integer',
          },
        },
      },
      'model.RequestEvent': {
        type: 'object',
        properties: {
          createdAt: {
            type: 'string',
          },
          duration: {
            type: 'number',
          },
          event: {
            $ref: '#/components/schemas/model.Event',
          },
          eventId: {
            type: 'integer',
          },
          id: {
            type: 'integer',
          },
          requestMethod: {
            type: 'string',
          },
          requestParams: {
            type: 'string',
          },
          requestUrl: {
            type: 'string',
          },
          responseData: {
            type: 'string',
          },
          responseStatus: {
            type: 'integer',
          },
          updatedAt: {
            type: 'string',
          },
        },
      },
      'model.RouteEvent': {
        type: 'object',
        properties: {
          action: {
            type: 'string',
          },
          createdAt: {
            type: 'string',
          },
          event: {
            $ref: '#/components/schemas/model.Event',
          },
          eventId: {
            type: 'integer',
          },
          id: {
            type: 'integer',
          },
          updatedAt: {
            type: 'string',
          },
        },
      },
      'model.User': {
        type: 'object',
        properties: {
          createdAt: {
            type: 'string',
          },
          email: {
            type: 'string',
          },
          id: {
            type: 'integer',
          },
          updatedAt: {
            type: 'string',
          },
          username: {
            type: 'string',
          },
        },
      },
      'service.CreateProjectRequest': {
        type: 'object',
        required: ['name'],
        properties: {
          description: {
            type: 'string',
          },
          name: {
            type: 'string',
          },
        },
      },
      'service.DistributionStatsResponse': {
        type: 'object',
        properties: {
          labels: {
            type: 'array',
            items: {
              type: 'string',
            },
          },
          values: {
            type: 'array',
            items: {
              type: 'integer',
            },
          },
        },
      },
      'service.EventDetailResponse': {
        type: 'object',
        properties: {
          click: {
            $ref: '#/components/schemas/model.ClickEvent',
          },
          errorEvent: {
            $ref: '#/components/schemas/model.ErrorEvent',
          },
          event: {
            $ref: '#/components/schemas/model.Event',
          },
          exposure: {
            $ref: '#/components/schemas/model.ExposureEvent',
          },
          performance: {
            $ref: '#/components/schemas/model.PerformanceEvent',
          },
          request: {
            $ref: '#/components/schemas/model.RequestEvent',
          },
          route: {
            $ref: '#/components/schemas/model.RouteEvent',
          },
        },
      },
      'service.EventListResponse': {
        type: 'object',
        properties: {
          list: {
            type: 'array',
            items: {
              $ref: '#/components/schemas/model.Event',
            },
          },
          total: {
            type: 'integer',
          },
        },
      },
      'service.EventStatsResponse': {
        type: 'object',
        properties: {
          counts: {
            type: 'array',
            items: {
              type: 'integer',
            },
          },
          dates: {
            type: 'array',
            items: {
              type: 'string',
            },
          },
        },
      },
      'service.LoginRequest': {
        type: 'object',
        required: ['password', 'username'],
        properties: {
          password: {
            type: 'string',
          },
          username: {
            type: 'string',
          },
        },
      },
      'service.LoginResponse': {
        type: 'object',
        properties: {
          expireAt: {
            type: 'integer',
          },
          token: {
            type: 'string',
          },
          user: {
            $ref: '#/components/schemas/model.User',
          },
        },
      },
      'service.PerformanceStatsResponse': {
        type: 'object',
        properties: {
          labels: {
            type: 'array',
            items: {
              type: 'string',
            },
          },
          values: {
            type: 'array',
            items: {
              type: 'number',
            },
          },
        },
      },
      'service.RegisterRequest': {
        type: 'object',
        required: ['email', 'password', 'username'],
        properties: {
          email: {
            type: 'string',
          },
          password: {
            type: 'string',
          },
          username: {
            type: 'string',
          },
        },
      },
      'service.RequestErrorStatsResponse': {
        type: 'object',
        properties: {
          counts: {
            type: 'array',
            items: {
              type: 'integer',
            },
          },
          statusCodes: {
            type: 'array',
            items: {
              type: 'integer',
            },
          },
        },
      },
      'service.TrackWebRequest': {
        type: 'object',
        properties: {
          baseInfo: {
            type: 'object',
            additionalProperties: true,
          },
          eventInfo: {
            type: 'array',
            items: {
              type: 'object',
              additionalProperties: true,
            },
          },
        },
      },
      'service.UpdateProjectRequest': {
        type: 'object',
        required: ['name'],
        properties: {
          description: {
            type: 'string',
          },
          name: {
            type: 'string',
          },
        },
      },
    },
  },
} as const

export type Oas = Infer<typeof oas>